//
//  MovieInteractor.swift
//  Entertainya
//
//  Created by Karim Cordilia on 02/02/2021.
//  Copyright (c) 2021 Karim Cordilia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit
import Moya
import RxSwift

protocol MovieInteractorProtocol {
    func getMovie(movieId: Int)
}

class MovieInteractor: MovieInteractorProtocol {

    // MARK: Properties
    
    // MARK: DI
    var presenter: MoviePresenterProtocol
    let provider: MoyaProvider<MovieService>!
    let disposeBag = DisposeBag()

    init(presenter: MoviePresenterProtocol,
         provider: MoyaProvider<MovieService>) {
        self.presenter = presenter
        self.provider = provider
    }
    
    func getMovie(movieId: Int) {
        provider.rx
            .request(.getSingleMovie(id: movieId))
            .filterSuccessfulStatusAndRedirectCodes()
            .map(Movie.self)
            .subscribe { [weak self] movie in
                self?.presenter.presentMovie(movie: movie)
            } onError: { error in
                print(error)
            }.disposed(by: disposeBag)

    }
}
